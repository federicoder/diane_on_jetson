// generated from rosidl_adapter/resource/msg.idl.em
// with input from point_cloud_interfaces/msg/CompressedPointCloud2.msg
// generated code does not contain a copyright notice

#include "sensor_msgs/msg/PointField.idl"
#include "std_msgs/msg/Header.idl"

module point_cloud_interfaces {
  module msg {
    @verbatim (language="comment", text=
      "SPDX-License-Identifier: BSD-3-Clause" "\n"
      "SPDX-FileCopyrightText: Czech Technical University in Prague .. 2019, paplhjak")
    struct CompressedPointCloud2 {
      std_msgs::msg::Header header;

      uint32 height;

      uint32 width;

      sequence<sensor_msgs::msg::PointField> fields;

      boolean is_bigendian;

      uint32 point_step;

      uint32 row_step;

      sequence<uint8> compressed_data;

      boolean is_dense;

      @verbatim (language="comment", text=
        "compression format used (e.g. draco, zlib, etc.)")
      string format;
    };
  };
};
